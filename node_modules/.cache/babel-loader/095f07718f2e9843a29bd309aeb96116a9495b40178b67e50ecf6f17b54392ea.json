{"ast":null,"code":"import { fetchUsers } from \"./operations\";\nconst {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\nconst slice = createSlice({\n  name: \"toolkit\",\n  initialState: {\n    followers: 100500,\n    tweets: 777,\n    isFollowed: false,\n    loading: false,\n    users: {\n      user: \"\",\n      avatar: \"\",\n      tweets: 0,\n      followers: 0,\n      id: \"\"\n    }\n  },\n  reducers: {\n    follow(state) {\n      state.followers += 1;\n      state.isFollowed = true;\n    },\n    unfollow(state) {\n      state.followers -= 1;\n      state.isFollowed = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUsers.pending, state => {\n      state.loading = true;\n    }).addCase(fetchUsers.fulfilled, (state, action) => {\n      state.users = action.payload;\n      state.loading = false;\n    }).addCase(fetchUsers.rejected, (state, action) => {\n      state.error = action.error.message;\n      state.loading = true;\n    });\n  }\n});\nexport default slice.reducer;\nexport const {\n  follow,\n  unfollow\n} = slice.actions;","map":{"version":3,"names":["fetchUsers","createSlice","require","slice","name","initialState","followers","tweets","isFollowed","loading","users","user","avatar","id","reducers","follow","state","unfollow","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","message","reducer","actions"],"sources":["C:/Projects/test-task/src/redux/slice.js"],"sourcesContent":["import { fetchUsers } from \"./operations\";\r\nconst { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst slice = createSlice({\r\n  name: \"toolkit\",\r\n  initialState: {\r\n    followers: 100500,\r\n    tweets: 777,\r\n    isFollowed: false,\r\n    loading: false,\r\n    users: {\r\n      user: \"\",\r\n      avatar: \"\",\r\n      tweets: 0,\r\n      followers: 0,\r\n      id: \"\",\r\n    },\r\n  },\r\n  reducers: {\r\n    follow(state) {\r\n      state.followers += 1;\r\n      state.isFollowed = true;\r\n    },\r\n    unfollow(state) {\r\n      state.followers -= 1;\r\n      state.isFollowed = false;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action) => {\r\n        state.users = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.error = action.error.message;\r\n        state.loading = true;\r\n      });\r\n  },\r\n});\r\nexport default slice.reducer;\r\nexport const { follow, unfollow } = slice.actions;\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,MAAM;EAAEC;AAAY,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAEnD,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACxBG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;MACLC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVL,MAAM,EAAE,CAAC;MACTD,SAAS,EAAE,CAAC;MACZO,EAAE,EAAE;IACN;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACV,SAAS,IAAI,CAAC;MACpBU,KAAK,CAACR,UAAU,GAAG,IAAI;IACzB,CAAC;IACDS,QAAQA,CAACD,KAAK,EAAE;MACdA,KAAK,CAACV,SAAS,IAAI,CAAC;MACpBU,KAAK,CAACR,UAAU,GAAG,KAAK;IAC1B;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACpB,UAAU,CAACqB,OAAO,EAAGL,KAAK,IAAK;MACtCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDW,OAAO,CAACpB,UAAU,CAACsB,SAAS,EAAE,CAACN,KAAK,EAAEO,MAAM,KAAK;MAChDP,KAAK,CAACN,KAAK,GAAGa,MAAM,CAACC,OAAO;MAC5BR,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDW,OAAO,CAACpB,UAAU,CAACyB,QAAQ,EAAE,CAACT,KAAK,EAAEO,MAAM,KAAK;MAC/CP,KAAK,CAACU,KAAK,GAAGH,MAAM,CAACG,KAAK,CAACC,OAAO;MAClCX,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,eAAeN,KAAK,CAACyB,OAAO;AAC5B,OAAO,MAAM;EAAEb,MAAM;EAAEE;AAAS,CAAC,GAAGd,KAAK,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}