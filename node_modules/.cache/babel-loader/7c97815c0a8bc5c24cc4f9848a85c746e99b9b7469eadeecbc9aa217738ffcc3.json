{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\test-task\\\\src\\\\pages\\\\Tweets.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"../shared/Header/Header\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUsers } from \"../redux/operations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Tweets = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(fetchUsers());\n    };\n    fetchData();\n  }, [dispatch]);\n  const users = useSelector(state => state.toolkit.users);\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }, this), users.map(_ref => {\n      let {\n        user,\n        avatar,\n        tweets,\n        followers\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(Tweets, \"BS7bVd8xaVNZdIWuKRUCDf4R6os=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["Header","useEffect","useDispatch","useSelector","fetchUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","Tweets","_s","dispatch","fetchData","users","state","toolkit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_ref","user","avatar","tweets","followers","id","_c","$RefreshReg$"],"sources":["C:/Projects/test-task/src/pages/Tweets.jsx"],"sourcesContent":["import Header from \"../shared/Header/Header\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUsers } from \"../redux/operations\";\r\nexport const Tweets = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n    const fetchData = async () => {\r\n      await dispatch(fetchUsers());\r\n    };\r\n    \r\n    fetchData();\r\n  }, [dispatch]);\r\n  \r\n  const users = useSelector((state) => state.toolkit.users);\r\n  console.log(users);\r\n    return (\r\n        <>\r\n         <Header />\r\n            {users.map(({user, avatar, tweets, followers,}) => (\r\n                <li key={user.id}>\r\n                    <p>{user}</p>\r\n                </li>\r\n            ))}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,yBAAyB;AAC5C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjD,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM;IAChB,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMD,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;IAC9B,CAAC;IAEDQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAME,KAAK,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EACzDG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAChB,oBACIP,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACCZ,OAAA,CAACN,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACNT,KAAK,CAACU,GAAG,CAACC,IAAA;MAAA,IAAC;QAACC,IAAI;QAAEC,MAAM;QAAEC,MAAM;QAAEC;MAAU,CAAC,GAAAJ,IAAA;MAAA,oBAC1ClB,OAAA;QAAAY,QAAA,eACIZ,OAAA;UAAAY,QAAA,EAAIO;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADRG,IAAI,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CAAC;IAAA,CACR,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAAZ,EAAA,CAtBYD,MAAM;EAAA,QACEP,WAAW,EAShBC,WAAW;AAAA;AAAA2B,EAAA,GAVdrB,MAAM;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}